import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.7ep0oyv4.js";const E=JSON.parse('{"title":"二、主动信息收集","description":"","frontmatter":{},"headers":[],"relativePath":"kali/2.md","filePath":"kali/2.md"}'),h={name:"kali/2.md"},l=n(`<h1 id="二、主动信息收集" tabindex="-1">二、主动信息收集 <a class="header-anchor" href="#二、主动信息收集" aria-label="Permalink to &quot;二、主动信息收集&quot;">​</a></h1><h2 id="_2-1-基于osi模型进行扫描的优缺点" tabindex="-1">2.1 基于OSI模型进行扫描的优缺点 <a class="header-anchor" href="#_2-1-基于osi模型进行扫描的优缺点" aria-label="Permalink to &quot;2.1  基于OSI模型进行扫描的优缺点&quot;">​</a></h2><ul><li>二层扫描的优缺点 <ul><li>扫描速度快、可靠</li><li>不可路由</li></ul></li><li>三层扫描的优缺点 <ul><li>可路由、速度较快</li><li>速度比二层慢，经常被边界防火墙过滤</li></ul></li><li>四层扫描的优缺点 <ul><li>可路由且结果可靠</li><li>不太可能被防火墙过滤</li><li>可以发现所有端口都被过滤的主机</li><li>基于状态过滤的防火墙可能过滤扫描</li><li>全端口扫描速度慢</li></ul></li></ul><h2 id="_2-2-基于ping命令的探测" tabindex="-1">2.2 基于ping命令的探测 <a class="header-anchor" href="#_2-2-基于ping命令的探测" aria-label="Permalink to &quot;2.2  基于ping命令的探测&quot;">​</a></h2><p><strong>ping</strong> 命令是我们常用的判断主机之间网络是否畅通，同样也是能判断我们的目标主机是否存活。</p><p><strong>traceroute</strong> 命令可以对路由进行跟踪</p><p><strong>fping</strong> 就是 <strong>ping命令</strong> 的加强版他可以对 <strong>一个IP段</strong> 进行ping扫描，而**ping命令 **本身是 <strong>不可以</strong> 对网段进行扫描的。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fping</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.0/24</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">fping.txt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ping一个网段，查看在线设备</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-a             #显示在线设备</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-g             #指定一个网段</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#&gt;fping.txt    #输出结果定向的到fping。txt</span></span></code></pre></div><p><strong>arping</strong></p><p>主动发送arp包去询问，速度快，但 <strong>可能被发现</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arping</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #发送4个arp包</span></span></code></pre></div><p><strong>netdiscover</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netdiscover</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.71.0/24</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #指定网卡和网段，网段内所有ip依次发送arp包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netdiscover</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #-p被动模式，不发送任何内容，只做嗅探</span></span></code></pre></div><p><strong>hping3</strong></p><p>hping3是一个命令行下使用的TCP/IP数据包组装/分析工具，通常web服务会用来做压力测试使 用，也可以进行DOS攻击的实验。同样Hping只能每次扫描一个目标。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hping3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 120</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --flood</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rand-source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 域名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-c 1000               </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#指定发送数据包数量</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-d 120                       </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#指定发送到目标主机的数据包大小（以字节为单位）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-S                              </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#表示只发送SYN数据包（三次握手中的SYN包）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-w 64                        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#指定tcp窗口大小</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-p 80                          </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#目的端口80</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#--flood                       </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#表示洪水攻击模式，尽快发送数据包</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#--rand-source          </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#使用随机的源ip地址，注：此处伪造的IP地址，仅用于局域网中伪造。</span></span></code></pre></div><h2 id="_2-3-基于nmap的扫描方式" tabindex="-1">2.3 基于Nmap的扫描方式 <a class="header-anchor" href="#_2-3-基于nmap的扫描方式" aria-label="Permalink to &quot;2.3  基于Nmap的扫描方式&quot;">​</a></h2><p><strong>Nmap基本参数</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 #扫描在线端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">namp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sV</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     #使用tcp syn扫描，版本探测，快速扫描</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          #全面快速扫描</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --top-ports</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #扫描最常开放的100个端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --script=vuln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   #采用vuln脚本扫描发现漏洞</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1-200</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        #指定扫描端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              #显示操作系统信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.0/24</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            #仅使用ping命令发现扫描网段</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Pn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             #非ping扫描</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --traceroute</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.103</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #增加路由跟踪</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --randomize-hosts</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --scan-delay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.103.100-106</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#延迟5s随机扫描100-106端口，达到隐藏效果</span></span></code></pre></div><p><strong>使用nc扫描端口</strong></p><p>nc是netcat的简写，有着网络界的瑞士军刀美誉。因为它短小精悍、功能实用，被设计为一个简 单、可靠的网络工具</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -z</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1-100</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-nv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 表示扫描的目标是ip地址不做域名解析</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 表示超时时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 表示进行端口扫描</span></span></code></pre></div><h2 id="_2-4-使用scapy定制数据包" tabindex="-1">2.4 使用scapy定制数据包 <a class="header-anchor" href="#_2-4-使用scapy定制数据包" aria-label="Permalink to &quot;2.4  使用scapy定制数据包&quot;">​</a></h2><p>Scapy是一个可以让用户发送、侦听和解析并伪装网络报文的Python程序。这些功能可以用于制 作侦测、扫描和攻击网络的工具。</p><p><strong>scapy定制arp协议</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ARP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看ARP函数用法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hwtype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 0x1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   #硬件类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ptype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IPv4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   #协议类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hwlen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> None</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   #硬件地址长度（MAC）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> None</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                    #协议地址长度（IP）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  op</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> who-has</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   #who-hans查询</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hwsrc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 00:0c:29:85:05:1b</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #源MAC地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  psrc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 192.168.2.112</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           #源IP地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hwdst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 00:00:00:00:00:00</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pdst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 0.0.0.0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 #目标IP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  sr1(ARP(pdst</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;192.168.2.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><strong>scapy定制ping包</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ICMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sr1(IP(dst</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;192.168.2.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ICMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),timeout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>注：IP()生成ping包的源IP和目标IP,ICMP()生ping包的类型。使用IP())和ICMP()两个函数，可以生成ping包，进行探测。</p><p><strong>scapy定制TCP协议syn请求</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TCP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看tcp函数用法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ftp_data</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         #*tcp源端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             #*tcp目的端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  seq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   #32位序号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ack</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   #32位确认序号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dataofs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> None</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            #4位首部长度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  reserved</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              #保留6位</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  flags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> S</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                #*标志域，紧急标志、有意义的应答标志、推、重置连接标志、同步序列号标志、完成发送数据标志。按照顺序排列是：URG、ACK、PSH、RST、SYN、FIN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  window</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 8192</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             #窗口大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chksum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> None</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             #16位效验和</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  urgptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                #优先指针</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> []</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              #选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  sr1(IP(dst</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;192.168.2.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/TCP(flags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;S&quot;,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),timeout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="_2-5-僵尸扫描" tabindex="-1">2.5 僵尸扫描 <a class="header-anchor" href="#_2-5-僵尸扫描" aria-label="Permalink to &quot;2.5  僵尸扫描&quot;">​</a></h2><p>僵尸主机：僵尸主机是指感染僵尸程序病毒，从而被黑客程序控制的计算机设备。但是僵尸扫描中的 僵尸主机指得是一个闲置的操作系统（这里的闲置是指主机不会主动和任何人通信），且此系统中IP数据 包中ID是递增的。</p><p>IPID: 指的是通信过中，IP数据包中的ID。</p><p>僵尸扫描拥有极高的隐蔽特性，但是实施条件苛刻。</p><p>1、目标网络可伪造源地址进行访问</p><p>2、选择僵尸机，僵尸机需要在互联网上是一个闲置的操作系统，需要系统使用递增的PID</p><p><strong>僵尸扫描原理</strong></p><ul><li><p>第一步 - 获取僵尸主机 IPID</p><ul><li><p>攻击者向僵尸主机发送SYN/ACK确认包</p></li><li><p>僵尸主机返回我们RST数据包关闭连接，RST数据包中包含了IPID信息，假设IPID=x</p></li></ul></li><li><p>第二步 - 让僵尸主机IPID+1</p><ul><li>攻击者修改IP包头的SRC字段为僵尸主机的IP，伪装成僵尸主机给目标发SYN请求</li><li>目标主机收到请求，如果端口开放，就会返回僵尸主机一个SYN/ACK数据包</li><li>僵尸主机收到目标主机SYN/ACK确认表，因为没有SYN请求，所以僵尸主机给目标主机返回一个RST数据包，这个包表示关闭连接，此僵尸主机对外发出一个数据包，所以IPID值+1 ，为x+1</li></ul></li><li><p>第三步 - 再次获取僵尸主机IPID值</p><ul><li>攻击者再次向僵尸主机发送SYN/ACK确认包</li><li>僵尸主机同样向攻击者返回一个RST，此僵尸主机对外又发出一个数据包，所以IPID值再+1，为x+2</li></ul></li><li><p>如果是x+2，则端口开放，x+1，则端口关闭</p></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scapy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #进入scapy</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#给僵尸主机发送SYN/ACK数据包，rz1表示变量接收返回数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rz1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sr1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IP(dst</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;192.168.1.2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/TCP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">445,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看返回包数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rz1.display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#攻击者修改IP包头的SRC字段为僵尸主机IP，伪装成僵尸主机给目标主机发送SYN请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sr1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IP(src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;192.168.1.2&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,dst</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;192.168.1.3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/TCP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timeout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rt.display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#攻击者再次向僵尸主机发送SYN/ACK数据包，获取IPID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rz2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sr1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IP(dst</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;192.168.1.2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/TCP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">445,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rz2.display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#对比rz1和rz2的id</span></span></code></pre></div><h2 id="_2-6-web网站目录扫描" tabindex="-1">2.6 web网站目录扫描 <a class="header-anchor" href="#_2-6-web网站目录扫描" aria-label="Permalink to &quot;2.6  web网站目录扫描&quot;">​</a></h2><p><strong>常见敏感文件</strong></p><ul><li>网站的备份文件/数据库备份文件 wwwroot.zip</li><li>后台登录的目录 manage login</li><li>安装包（源码）</li><li>上传的目录 uploads</li><li>mysqlE的管理界面 phpmyadmin</li><li>程序的安装路径 install</li><li>......</li></ul><p><strong>常用工具</strong></p><ul><li>Burp Suite</li><li>dirb</li><li>御剑</li><li>dirbuster</li><li>......</li></ul><h2 id="_2-7-cms系统指纹识别" tabindex="-1">2.7 CMS系统指纹识别 <a class="header-anchor" href="#_2-7-cms系统指纹识别" aria-label="Permalink to &quot;2.7  CMS系统指纹识别&quot;">​</a></h2><p><strong>常见CMS</strong></p><ul><li>企业建站系统：MetInfo（米拓）、蝉知、SiteServer CMS等</li><li>B2C商城系统：商派Shopex、ECshop、.HiShop、XpShop等；</li><li>门户建站系统：DedeCMS（织梦）、帝国CMS、PHPCMS、动易、CmsTop等</li><li>博客系统：VordPress、Z-Blog等；</li><li>论坛社区：Discuz、.PHPwind、VeCenter等</li><li>问答系统：Tipask、whatsns等，</li><li>知识百科系统：HDwiki;</li><li>B2B门户系统：Destoon、B2 Bbuilder、.友邻B2B等</li><li>人才招聘网站系统：骑士CMS、PHP云人才管理系统；</li><li>房产网站系统：FangCms等；</li><li>在线教育建站系统：Kesion、EduSoho;</li><li>电影网站系统：苹果CMS、ctcms、.movcms等；</li><li>小说文学建站系统：杰奇CMS,</li></ul><p><strong>常用工具</strong></p><ul><li>whatweb （whatweb-v www.jxgzy.cn）</li><li>cmseek（cmseek -u www.jxgzy.cn）</li><li>御剑指纹扫描器</li><li>WhatRuns、Wappalyzer（浏览器插件）</li><li><a href="http://whatweb.bugscaner.com/%EF%BC%88%E5%9C%A8%E7%BA%BF%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB%EF%BC%89" target="_blank" rel="noreferrer">http://whatweb.bugscaner.com/（在线指纹识别）</a></li></ul><p><strong>指纹识别内容</strong></p><ul><li>CMS信息：比如Discuz、织梦dedecms、帝国CMS、PHPCMS、ECshop等；</li><li>前端技术：比如HTML5、jquery、.bootstrap、Vue、ace等；</li><li>开发语言：比如PHP、Java、Ruby、Python、C#等；</li><li>Web服务器：比如Apache、Nginx,、IIS、lighttpd等；</li><li>应用服务器：比如Tomcat、.Jboss、Neblogic、.Websphere等</li><li>操作系统信息：比如Linux、win2k8、win7、Kali、Centos等；</li><li>CDN信息：是否使用CDN,如cloudflare、帝联、蓝讯、网宿、七牛云、阿里云等；</li><li>WAF信息：是否使用WAF,如D盾、云锁、宝塔、安全狗、360等</li></ul><h2 id="_2-8-综合工具" tabindex="-1">2.8 综合工具 <a class="header-anchor" href="#_2-8-综合工具" aria-label="Permalink to &quot;2.8  综合工具&quot;">​</a></h2><ul><li>ARL灯塔</li><li>yakit</li><li>goby</li><li>......</li></ul>`,54),p=[l];function k(t,e,r,d,g,F){return a(),i("div",null,p)}const C=s(h,[["render",k]]);export{E as __pageData,C as default};
