import{_ as s,c as a,o as i,a3 as n}from"./chunks/framework.7ep0oyv4.js";const l="/assets/PgpbDOMXBtLWQUK.CWdI5EHT.png",t="/assets/pnGV5ODQYafX23T.Do9RzFSU.png",e="/assets/eoWJTM2gDbPpN7Q.On-_WI5J.png",p="/assets/e6SKWTlbG2qRdnF.CqBlHeYW.png",m=JSON.parse('{"title":"三、WireShark抓包及常用协议分析","description":"","frontmatter":{},"headers":[],"relativePath":"kali/3.md","filePath":"kali/3.md"}'),r={name:"kali/3.md"},h=n(`<h1 id="三、wireshark抓包及常用协议分析" tabindex="-1">三、WireShark抓包及常用协议分析 <a class="header-anchor" href="#三、wireshark抓包及常用协议分析" aria-label="Permalink to &quot;三、WireShark抓包及常用协议分析&quot;">​</a></h1><h2 id="_3-1-常见协议包" tabindex="-1">3.1 常见协议包 <a class="header-anchor" href="#_3-1-常见协议包" aria-label="Permalink to &quot;3.1  常见协议包&quot;">​</a></h2><ul><li><strong>ARP协议</strong></li><li><strong>ICMP协议</strong></li><li><strong>TCP协议</strong></li><li><strong>UDP协议</strong></li><li><strong>DNS协议</strong></li><li><strong>HTTP协议</strong></li></ul><p><strong>混杂模式介绍</strong></p><p>混杂模式就是接收所有经过网卡的数据包，包括不是发给本机的包，即不验证 MAC地址。</p><p>普通模式下网卡只接收发给本机的包（包括广播包）传递给上层程序，其它的包一律丢弃。</p><p>开关 ： 捕获 -- 选项 --混杂模式</p><h2 id="_3-2-wireshark的过滤器使用" tabindex="-1">3.2 WireShark的过滤器使用 <a class="header-anchor" href="#_3-2-wireshark的过滤器使用" aria-label="Permalink to &quot;3.2  WireShark的过滤器使用&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#筛选arp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#筛选syn包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcp.flags.syn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#筛选源地址是192.168.1.1的包或目标地址是192.168.1.3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip.scr_host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.1.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ip.dst_host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.1.3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#筛选ip地址是192.168.1.3，不分源地址和目标地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip.addr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.1.3</span></span></code></pre></div><h2 id="_3-3-常用协议分析" tabindex="-1">3.3 常用协议分析 <a class="header-anchor" href="#_3-3-常用协议分析" aria-label="Permalink to &quot;3.3  常用协议分析&quot;">​</a></h2><ul><li>ARP协议</li></ul><p><img src="`+l+'" alt="image-20221115175620452" loading="lazy"></p><ul><li>ICMP</li></ul><p><img src="'+t+'" alt="image-20221116093939303" loading="lazy"></p><p><img src="'+e+'" alt="image-20221116094003872" loading="lazy"></p><ul><li>TCP</li></ul><p>三次握手和四次分手</p><ul><li>HTTP</li></ul><p><img src="'+p+'" alt="image-20221116094714470" loading="lazy"></p>',19),o=[h];function k(d,g,c,_,F,C){return i(),a("div",null,o)}const y=s(r,[["render",k]]);export{m as __pageData,y as default};
