import{_ as l,c as i,o as a,a3 as p}from"./chunks/framework.7ep0oyv4.js";const d=JSON.parse('{"title":"四、NMAP高级使用技巧和漏洞扫描发现","description":"","frontmatter":{},"headers":[],"relativePath":"kali/4.md","filePath":"kali/4.md"}'),n={name:"kali/4.md"},e=p('<h1 id="四、nmap高级使用技巧和漏洞扫描发现" tabindex="-1">四、NMAP高级使用技巧和漏洞扫描发现 <a class="header-anchor" href="#四、nmap高级使用技巧和漏洞扫描发现" aria-label="Permalink to &quot;四、NMAP高级使用技巧和漏洞扫描发现&quot;">​</a></h1><h2 id="_4-1-nmap高级使用技巧" tabindex="-1">4.1 NMAP高级使用技巧 <a class="header-anchor" href="#_4-1-nmap高级使用技巧" aria-label="Permalink to &quot;4.1  NMAP高级使用技巧&quot;">​</a></h2><p><strong>nmap可用于：</strong></p><ul><li>检测活在网络上的主机（主机发现）</li><li>检测主机上开放的端口（端口发现或枚举）</li><li>检测到相应的端口（服务发现）的软件和版本</li><li>检测操作系统，硬件地址，以及软件版本</li><li>检测脆弱性的漏洞(Nmap的脚本)</li></ul><p><strong>nmap端口状态解析</strong></p><p>端口扫描是Nmap最基本最核心的功能，用于确定目标主机的TCP/UDP端口的开放情况。</p><p>**open：**应用程序在该端口接收TCP连接或者UDP报文。</p><p>**closed：**关闭的端口对于nmap也是可访问的，它接收nmap探测报文并作出响应。但没有应用 程序在其土监听。</p><p>**filtered：**由于包过滤阻止探测报文到达端口，nmap无法确定该端口是否开放。过滤可能来自专 业的防火墙设备，路由规则或者主机上的软件防火墙。</p><p>**unfiltered：**未被过滤状态意味着端口可访问，但是nmap无法确定它是开放还是关闭。只有用 于映射防火墙规则集的ACK扫描才会把端口分类到这个状态。</p><p>**open|filtered：**无法确定端口是开放还是被过滤，开放的端口不响应就是一个例子。没有响应也 可能意味着报文过滤器丢弃了探测报文或者它引发的任何反应。UDP,IP协议，FIN,Null等扫描会 引起。</p><p><strong>closed|filtered:</strong>（关闭或者被过滤的）：无法确定端口是关闭的还是被过滤的。</p><h2 id="_4-2-nmap语法及示例" tabindex="-1">4.2 NMAP语法及示例 <a class="header-anchor" href="#_4-2-nmap语法及示例" aria-label="Permalink to &quot;4.2  NMAP语法及示例&quot;">​</a></h2><p>语法：nmap [Scan Type(s)] [Options]</p><blockquote><p>默认情况下，Nmap会扫描1000个最有可能开放的TCP端口</p></blockquote><ul><li><p>第一种：Intense scan</p><ul><li>nmap -T4 -A -v</li><li>-T4 加快执行速度</li><li>-A 操作系统及版本探测</li><li>-v 显示详细的输出</li></ul></li><li><p>第二种：Intense scan plus UDP</p><ul><li>nmap -sS sU -T4 -A -v</li><li>即UDP扫描</li><li>-sS TCP SYN扫描</li><li>-sU UDP扫描</li></ul></li><li><p>第三种：Intense scan ，all TCP ports</p><ul><li>nmap -p 1-65535 -T4 -A -v</li><li>扫描所有tcp端口，试图扫描所有端口开放情况，速度较慢</li></ul></li><li><p>第四种：Intense scan ，no ping</p><ul><li>nmap -T4 -A -v -Pn</li><li>-Pn 非ping扫描</li></ul></li><li><p>第五种：Ping scan</p><ul><li>nmap -sn</li><li>-sn ping扫描，速度快，容易被防火墙屏蔽</li></ul></li><li><p>第六种：Quick scan</p><ul><li>nmap -T4 -F</li><li>-F 快速模式 ，快速扫描</li></ul></li><li><p>第七种：Quick scan plus</p><ul><li>nmap -sV -T4 -O -F --version-light</li><li>快速扫描加强模式</li><li>-sV 探测端口及版本服务信息</li><li>-O 开启OS检测</li><li>--version-light 设定侦测等级为2</li></ul></li><li><p>第八种：Quick traceroute</p><ul><li>nmap -sn --traceroute</li><li>路由跟踪</li><li>-sn ping扫描，关闭端口扫描</li><li>--traceroute 显示本机到目标的路由跃点</li></ul></li><li><p>第九种：Regular scan</p><ul><li>nmap</li><li>常规扫描，扫描1000个最有可能开放的TCP端口</li></ul></li><li><p>第十种：Slow comprehensive scan</p><ul><li>nmap -sS -sU -T4 -A -v -PE -PP -PS80,443,-PA3389,PU40125 -PY -g 53 --script all</li><li>慢速全面扫描</li></ul></li></ul>',16),t=[e];function s(o,r,c,u,m,P){return a(),i("div",null,t)}const h=l(n,[["render",s]]);export{d as __pageData,h as default};
