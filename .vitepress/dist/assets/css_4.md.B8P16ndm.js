import{_ as s,c as i,o as a,a3 as l}from"./chunks/framework.7ep0oyv4.js";const e="/assets/240415-PeVI1ldCUH.DoNtpQmT.png",t="/assets/240415-QqJuLriHiO.BOtL-B8o.png",y=JSON.parse('{"title":"四、CSS常用属性","description":"","frontmatter":{},"headers":[],"relativePath":"css/4.md","filePath":"css/4.md"}'),o={name:"css/4.md"},n=l('<h1 id="四、css常用属性" tabindex="-1">四、CSS常用属性 <a class="header-anchor" href="#四、css常用属性" aria-label="Permalink to &quot;四、CSS常用属性&quot;">​</a></h1><h2 id="_1-像素的概念" tabindex="-1">1. 像素的概念 <a class="header-anchor" href="#_1-像素的概念" aria-label="Permalink to &quot;1. 像素的概念&quot;">​</a></h2><ul><li><p>概念：我们的电脑屏幕是，是由一个一个“小点”组成的，每个“小点”，就是一个像素（px）。</p></li><li><p>规律：像素点越小，呈现的内容就越清晰、越细腻。 <img src="'+e+`" alt="image-20240415110355946" loading="lazy"></p><blockquote><p>注意点：如果电脑设置中开启了缩放，那么就会影响一些工具的测量结果，但这无所谓，因为我们工作中都是参考详细的设计稿，去给元素设置宽高。</p></blockquote></li></ul><h2 id="_2-颜色的表示" tabindex="-1">2. 颜色的表示 <a class="header-anchor" href="#_2-颜色的表示" aria-label="Permalink to &quot;2. 颜色的表示&quot;">​</a></h2><h3 id="_2-1-表示方式一-颜色名" tabindex="-1">2.1 表示方式一：颜色名 <a class="header-anchor" href="#_2-1-表示方式一-颜色名" aria-label="Permalink to &quot;2.1 表示方式一：颜色名&quot;">​</a></h3><ul><li>编写方式：直接使用颜色对应的英文单词，编写比较简单，例如： <ol><li><span style="color:red;font-weight:700;">红色：red</span></li><li><span style="color:green;font-weight:700;">绿色：green</span></li><li><strong><span style="color:blue;font-weight:700;">蓝色：blue</span></strong></li><li><span style="color:purple;font-weight:700;"> 紫色：purple</span></li><li><strong><span style="color:orange;font-weight:700;"> 橙色：orange</span></strong></li><li><strong><span style="color:gray;font-weight:700;"> 灰色：gray</span></strong> ......</li></ol></li></ul><blockquote><ol><li>颜色名这种方式，表达的颜色比较单一，所以用的并不多。</li><li>具体颜色名参考 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/named-color" target="_blank" rel="noreferrer">MDN</a> 官方文档：</li></ol></blockquote><h3 id="_2-2-表示方式二-rgb-或-rgba" tabindex="-1">2.2 表示方式二：rgb 或 rgba <a class="header-anchor" href="#_2-2-表示方式二-rgb-或-rgba" aria-label="Permalink to &quot;2.2 表示方式二：rgb 或 rgba&quot;">​</a></h3><ul><li><p>编写方式：使用 <strong>红、黄、蓝</strong> 这三种光的三原色进行组合。</p><ul><li><span style="color:red;font-weight:700;">r</span> 表示 <span style="color:red;font-weight:700;">红色</span></li><li><span style="color:green;font-weight:700;">g</span> 表示 <span style="color:green;font-weight:700;">绿色</span></li><li><span style="color:blue;font-weight:700;">b</span> 表示 <span style="color:blue;font-weight:700;">蓝色</span></li><li><span style="color:gray;font-weight:700;">a</span> 表示 <span style="color:gray;font-weight:700;">灰色</span></li></ul></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 使用 0~255 之间的数字表示一种颜色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: rgb(255, 0, 0);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 红色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: rgb(0, 255, 0);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 绿色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: rgb(0, 0, 255);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 蓝色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: rgb(0, 0, 0);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 黑色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: rgb(255, 255, 255);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 白色 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 混合出任意一种颜色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color:rgb(138, 43, 226) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 紫罗兰色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color:rgba(255, 0, 0, 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 半透明的红色 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 也可以使用百分比表示一种颜色（用的少） */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: rgb(100%, 0%, 0%);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 红色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: rgba(100%, 0%, 0%,50%);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 半透明的红色 */</span></span></code></pre></div></li><li><p>小规律：</p><blockquote><ol><li>若三种颜色值相同，呈现的是灰色，值越大，灰色越浅。</li><li><code>rgb(0, 0, 0)</code> 是黑色， <code>rgb(255, 255,255)</code> 是白色。</li><li>对于 <code>rbga</code> 来说，前三位的 <code>rgb</code> 形式要保持一致，要么都是 <code>0~255</code> 的数字，要么都是<code>百分比</code> 。</li></ol></blockquote></li></ul><h3 id="_2-3-表示方式三-hex-或-hexa" tabindex="-1">2.3 表示方式三：HEX 或 HEXA <a class="header-anchor" href="#_2-3-表示方式三-hex-或-hexa" aria-label="Permalink to &quot;2.3 表示方式三：HEX 或 HEXA&quot;">​</a></h3><p><code>HEX</code> 的原理同与 <code>rgb</code> 一样，依然是通过：<strong>红</strong>、<strong>绿</strong>、<strong>蓝色</strong> 进行组合，只不过要用 <strong>6位（分成3组）</strong> 来表达=</p><p>格式为：# <span style="color:red;font-weight:700;font-size:30px;">rr</span><span style="color:green;font-weight:700;font-size:30px;">gg</span><span style="color:blue;font-weight:700;font-size:30px;">bb</span></p><blockquote><p>每一位数字的取值范围是： <code>0 ~ f</code> ，即：<code>（ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b, c,d, e, f ）</code></p><p>所以每一种光的最小值是： <code>00</code> ，最大值是： <code>ff</code></p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#ff0000;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 红色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#00ff00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 绿色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#0000ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 蓝色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 黑色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#ffffff;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 白色 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 如果每种颜色的两位都是相同的，就可以简写*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#ff9988;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 可简为：#f98 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 但要注意前三位简写了，那么透明度就也要简写 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#ff998866;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 可简为：#f986 */</span></span></code></pre></div><blockquote><p>注意点：<code>IE</code> 浏览器不支持 <code>HEXA</code> ，但支持 <code>HEX</code>。</p></blockquote><h3 id="_2-4-表示方式四-hsl-或-hsla" tabindex="-1">2.4 表示方式四：HSL 或 HSLA <a class="header-anchor" href="#_2-4-表示方式四-hsl-或-hsla" aria-label="Permalink to &quot;2.4 表示方式四：HSL 或 HSLA&quot;">​</a></h3><ul><li><p><code>HSL</code> 是通过：色相、饱和度、亮度，来表示一个颜色的，格式为： <code>hsl(色相,饱和度,亮度)</code></p><ul><li><p>色相：取值范围是 <code>0~360</code> 度，具体度数对应的颜色如下图： <img src="`+t+`" alt="image-20240415111951895" style="zoom:67%;"></p></li><li><p>饱和度：取值范围是 <code>0%~100%</code> 。（向色相中对应颜色中添加灰色， 0% 全灰， 100% 没有灰）</p></li><li><p>亮度：取值范围是 <code>0%~100%</code> 。（ 0% 亮度没了，所以就是黑色。 100% 亮度太强，所以就是白色了）</p></li></ul></li><li><p><code>HSLA</code> 其实就是在 <code>HSL</code> 的基础上，添加了透明度。</p></li></ul><h2 id="_3-css字体属性" tabindex="-1">3. CSS字体属性 <a class="header-anchor" href="#_3-css字体属性" aria-label="Permalink to &quot;3. CSS字体属性&quot;">​</a></h2><h3 id="_3-1-字体大小" tabindex="-1">3.1 字体大小 <a class="header-anchor" href="#_3-1-字体大小" aria-label="Permalink to &quot;3.1 字体大小&quot;">​</a></h3><ul><li><p>属性名： <code>font-size</code></p></li><li><p>作用：控制字体的大小。</p></li><li><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>注意点：</p><blockquote><ol><li><code>Chrome</code> 浏览器支持的最小文字为 <code>12px</code> ，默认的文字大小为 <code>16px</code> ，并且 <code>0px</code> 会自动</li></ol><p>消失。</p><ol start="2"><li>不同浏览器默认的字体大小可能不一致，所以最好给一个明确的值，不要用默认大</li></ol><p>小。</p><ol start="3"><li>通常以给 <code>body</code> 设置 <code>font-size</code> 属性，这样 <code>body</code> 中的其他元素就都可以继承了。</li></ol></blockquote></li><li><p>注意点：</p><blockquote><ol><li>由于字体设计原因，文字最终呈现的大小，并不一定与 font-size 的值一致，可能大，也可能小。</li><li>通常情况下，文字相对字体设计框，并不是垂直居中的，通常都靠下 一些。</li></ol></blockquote></li></ul><h3 id="_3-2-字体族" tabindex="-1">3.2 字体族 <a class="header-anchor" href="#_3-2-字体族" aria-label="Permalink to &quot;3.2 字体族&quot;">​</a></h3><ul><li><p>属性名： <code>font-family</code></p></li><li><p>作用：控制字体类型。</p></li><li><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;STCaiyun&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Microsoft YaHei&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>注意：</p><blockquote><ol><li>使用字体的英文名字兼容性会更好，具体的英文名可以自行查询，或在电脑的设置里</li></ol><p>去寻找。</p><ol start="2"><li>如果字体名包含空格，必须使用引号包裹起来。</li><li>可以设置多个字体，按照从左到右的顺序逐个查找，找到就用，没有找到就使用后面</li></ol><p>的，且通常在最后写上 <code>serif</code> （衬线字体）或 <code>sans-serif</code> （非衬线字体）。</p><ol start="4"><li><code>windows</code> 系统中，默认的字体就是微软雅黑。</li></ol></blockquote></li></ul><h3 id="_3-3-字体风格" tabindex="-1">3.3 字体风格 <a class="header-anchor" href="#_3-3-字体风格" aria-label="Permalink to &quot;3.3 字体风格&quot;">​</a></h3><ul><li><p>属性名： <code>font-style</code></p></li><li><p>作用：控制字体是否为斜体。</p></li><li><p>常用值：</p><ol><li><code>normal</code> ：正常（默认值）</li><li><code>italic</code> ：斜体（使用字体自带的斜体效果）</li><li><code>oblique</code> ：斜体（强制倾斜产生的斜体效果）</li></ol><blockquote><p>实现斜体时，更推荐使用 italic 。</p></blockquote></li><li><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	font-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">italic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="_3-4-字体粗细" tabindex="-1">3.4 字体粗细 <a class="header-anchor" href="#_3-4-字体粗细" aria-label="Permalink to &quot;3.4 字体粗细&quot;">​</a></h3><ul><li><p>属性名： <code>font-weight</code></p></li><li><p>作用：控制字体的粗细。</p></li><li><p>常用值：</p><ul><li><p>关键词</p><blockquote><ol><li><code>lighter</code> ：细</li><li><code>normal</code> ： 正常</li><li><code>bold</code> ：粗</li><li><code>bolder</code> ：很粗 （多数字体不支持）</li></ol></blockquote></li><li><p>数值：</p><blockquote><ol><li><code>100~1000</code> 且无单位，数值越大，字体越粗 （或一样粗，具体得看字体设计时的</li></ol><p>精确程度）。</p><ol start="2"><li><code>100~300</code> 等同于 <code>lighter</code> ， <code>400~500</code> 等同于 <code>normal</code> ， <code>600</code> 及以上等同于</li></ol><p><code>bold</code> 。</p></blockquote></li><li><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul></li></ul><h3 id="_3-5-字体复合写法" tabindex="-1">3.5 字体复合写法 <a class="header-anchor" href="#_3-5-字体复合写法" aria-label="Permalink to &quot;3.5 字体复合写法&quot;">​</a></h3><ul><li><p>属性名： <code>font</code> ，可以把上述字体样式合并成一个属性。</p></li><li><p>作用：将上述所有字体相关的属性复合在一起编写。</p></li><li><p>编写规则：</p><ol><li>字体大小、字体族必须都写上。</li><li>字体族必须是 <strong>最后一位</strong>、字体大小必须是 <strong>倒数第二位</strong>。</li><li>各个属性间用空格隔开。</li></ol></li><li><p>实际开发中更推荐复合写法，但这也不是绝对的，比如只想设置字体大小，那就直接用 <code>font-size</code> 属性</p></li></ul><h2 id="_4-css文本属性" tabindex="-1">4. CSS文本属性 <a class="header-anchor" href="#_4-css文本属性" aria-label="Permalink to &quot;4. CSS文本属性&quot;">​</a></h2><h3 id="_4-1-文本颜色" tabindex="-1">4.1 文本颜色 <a class="header-anchor" href="#_4-1-文本颜色" aria-label="Permalink to &quot;4.1 文本颜色&quot;">​</a></h3><ul><li><p>属性名： <code>color</code></p></li><li><p>作用：控制文字的颜色。</p></li><li><p>可选值：</p><ol><li>颜色名</li><li><code>rgb</code> 或 <code>rgba</code></li><li><code>HEX</code> 或 <code>HEXA</code> （十六进制）</li><li><code>HSL</code> 或 <code>HSLA</code></li></ol><blockquote><p>开发中常用的是： <code>rgb/rgba</code> 或 <code>HEX/HEXA</code> （十六进制）。</p></blockquote></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">112</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">78</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="_4-2-文本间距" tabindex="-1">4.2 文本间距 <a class="header-anchor" href="#_4-2-文本间距" aria-label="Permalink to &quot;4.2 文本间距&quot;">​</a></h3><ul><li>字母间距： <code>letter-spacing</code></li><li>单词间距： <code>word-spacing</code> （通过空格识别词）</li><li>属性值为像素（ <code>px</code> ），正值让间距增大，负值让间距缩小。</li></ul><h3 id="_4-3-文本修饰" tabindex="-1">4.3 文本修饰 <a class="header-anchor" href="#_4-3-文本修饰" aria-label="Permalink to &quot;4.3 文本修饰&quot;">​</a></h3><ul><li><p>属性名： <code>text-decoration</code></p></li><li><p>作用：控制文本的各种装饰线。</p></li><li><p>可选值：</p><ol><li><p><code>none</code> ： 无装饰线（常用）</p></li><li><p><code>underline</code> ：下划线（常用）</p></li><li><p><code>overline</code> ： 上划线</p></li><li><p><code>line-through</code> ： 删除线</p></li></ol><p>可搭配如下值使用：</p><ol><li><code>dotted</code> ：虚线</li><li><code>wavy</code> ：波浪线</li><li>也可以指定颜色</li></ol></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 无顺序 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	text-decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">underline</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> wavy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="_4-4-文本缩进" tabindex="-1">4.4 文本缩进 <a class="header-anchor" href="#_4-4-文本缩进" aria-label="Permalink to &quot;4.4 文本缩进&quot;">​</a></h3><ul><li><p>属性名： <code>text-indent</code> 。</p></li><li><p>作用：控制文本首字母的缩进。</p></li><li><p>属性值： <code>css</code> 中的长度单位，例如： <code>px</code>、<code>em</code></p></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* em是相对元素 \`font-size\` 的倍数 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	text-indent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="_4-5-文本对齐-水平" tabindex="-1">4.5 文本对齐_水平 <a class="header-anchor" href="#_4-5-文本对齐-水平" aria-label="Permalink to &quot;4.5 文本对齐_水平&quot;">​</a></h3><ul><li><p>属性名： <code>text-align</code> 。</p></li><li><p>作用：控制文本的水平对齐方式。</p></li><li><p>常用值：</p><ol><li><code>left</code> ：左对齐（默认值）</li><li><code>right</code> ：右对齐</li><li><code>center</code> ：居中对齐</li></ol></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	text-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="_4-6-行高" tabindex="-1">4.6 行高 <a class="header-anchor" href="#_4-6-行高" aria-label="Permalink to &quot;4.6 行高&quot;">​</a></h3><ul><li><p>属性名： <code>line-height</code></p></li><li><p>作用：控制一行文字的高度。</p></li><li><p>可选值：</p><ol><li><code>normal</code> ：由浏览器根据文字大小决定的一个默认值。</li><li>像素( px )。</li><li>数字：参考自身 <code>font-size</code> 的倍数（很常用）。</li><li>百分比：参考自身 <code>font-size</code> 的百分比。</li></ol></li><li><p>备注：由于字体设计原因，文字在一行中，并不是绝对垂直居中，若一行中都是文字，不会太影响观感。</p></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>行高注意事项：</p><blockquote><ol><li><code>line-height</code> 过小会怎样？—— 文字产生重叠，且最小值是 <code>0</code> ，不能为负数。</li><li><code>line-height</code> 是可以继承的，且为了能更好的呈现文字，最好写数值。</li><li><code>line-height</code> 和 height 是什么关系？ <ul><li>设置了 <code>height</code> ，那么高度就是 <code>height</code> 的值。</li><li>不设置 <code>height</code> 的时候，会根据 <code>line-height</code> 计算高度。</li></ul></li></ol></blockquote></li><li><p>应用场景：</p><ol><li>对于多行文字：控制行与行之间的距离。</li><li>对于单行文字：让 <code>height</code> 等于 <code>line-height</code> ，可以实现文字垂直居中。</li></ol><blockquote><p>备注：由于字体设计原因，靠上述办法实现的居中，并不是绝对的垂直居中，但如果</p><p>一行中都是文字，不会太影响观感。</p></blockquote></li></ul><h3 id="_4-7-文本对齐-垂直" tabindex="-1">4.7 文本对齐_垂直 <a class="header-anchor" href="#_4-7-文本对齐-垂直" aria-label="Permalink to &quot;4.7 文本对齐_垂直&quot;">​</a></h3><ol><li><p>**顶部：**无需任何属性，在垂直方向上，默认就是顶部对齐。</p></li><li><p>**居中：**对于单行文字，让 <code>height</code> = <code>line-height</code> 即可。</p><blockquote><p>问题：多行文字<strong>垂直居中</strong>怎么办？—— 后面我们用定位去做。</p></blockquote></li><li><p>**底部：**对于单行文字，目前一个临时的方式： 让 <code>line-height</code> = ( <code>height</code> × <code>2</code> ) - <code>font-size</code> - <code>x</code> 。 备注： <code>x</code> 是根据字体族，动态决定的一个值。</p><blockquote><p>问题：垂直方向上的底部对齐，更好的解决办法是什么？—— 后面我们用定位去做</p></blockquote></li></ol><h3 id="_4-8-vertical-align" tabindex="-1">4.8 vertical-align <a class="header-anchor" href="#_4-8-vertical-align" aria-label="Permalink to &quot;4.8 vertical-align&quot;">​</a></h3><ul><li><p>属性名： <code>vertical-align</code> 。</p></li><li><p>作用：用于指定 <strong>同一行元素之间</strong>，或 <strong>表格单元格</strong> 内文字的 <strong>垂直对齐方式</strong>。</p></li><li><p>常用值：</p><ol><li><code>baseline</code> （默认值）：使元素的基线与父元素的基线对齐。</li><li><code>top</code> ：使元素的 <strong>顶部</strong> 与其 <strong>所在行的顶部</strong> 对齐。</li><li><code>middle</code> ：使元素的 <strong>中部</strong> 与 <strong>父元素的基线</strong> 加上父元素 <strong>字母</strong> x <strong>的一半</strong> 对齐。</li><li><code>bottom</code> ：使元素的 <strong>底部</strong> 与其 <strong>所在行的底部</strong> 对齐。</li></ol><blockquote><p>特别注意： <code>vertical-align</code> 不能控制块元素</p></blockquote></li></ul><h2 id="_5-css列表属性" tabindex="-1">5. CSS列表属性 <a class="header-anchor" href="#_5-css列表属性" aria-label="Permalink to &quot;5. CSS列表属性&quot;">​</a></h2><p>列表相关的属性，可以作用在 <code>ul</code> 、 <code>ol</code>、 <code>li</code> 元素上。</p><table><thead><tr><th><strong>CSS</strong> <strong>属性名</strong></th><th><strong>功能</strong></th><th><strong>属性值</strong></th></tr></thead><tbody><tr><td><code>list-style-type</code></td><td>设置列表符号</td><td>常用值如下：<br><code>none</code> ：不显示前面的标识（很常用！）<br><code>square</code> ：实心方块<br><code>disc</code> ：圆形<br><code>decimal</code> ：数字<br><code>lower-roman</code> ：小写罗马字<br><code>upper-roman</code> ：大写罗马字<br><code>lower-alpha</code> ：小写字母<br><code>upper-alpha</code> ：大写字母</td></tr><tr><td><code>list-style-position</code></td><td>设置列表符号的位置</td><td><code>inside</code> ：在 li 的里面<br><code>outside</code> ：在 li 的外边</td></tr><tr><td><code>list-style-image</code></td><td>自定义列表符号</td><td><code>url(图片地址)</code></td></tr><tr><td><code>list-style</code></td><td>复合属性</td><td>没有数量、顺序的要求</td></tr></tbody></table><h2 id="_6-css表格属性" tabindex="-1">6. CSS表格属性 <a class="header-anchor" href="#_6-css表格属性" aria-label="Permalink to &quot;6. CSS表格属性&quot;">​</a></h2><p><strong>1.</strong> <strong>边框相关属性（其他元素也能用）：</strong></p><table><thead><tr><th><strong>CSS</strong> <strong>属性名</strong></th><th><strong>功能</strong></th><th><strong>属性值</strong></th></tr></thead><tbody><tr><td><code>border-width </code></td><td>边框宽度</td><td><code>CSS</code> 中可用的长度值</td></tr><tr><td><code>border-color </code></td><td>边框颜色</td><td><code>CSS</code> 中可用的颜色值</td></tr><tr><td><code>border-style</code></td><td>边框风格</td><td><code>none</code> 默认值<br><code>solid</code> 实线<br><code>dashed</code> 虚线<br><code>dotted</code> 点线<br><code>double</code> 双实线</td></tr><tr><td><code>border </code></td><td>边框复合属性</td><td>没有数量、顺序的要求</td></tr></tbody></table><blockquote><p>注意：</p><ol><li>以上 4 个边框相关的属性，其他元素也可以用，这是我们第一次遇见它们。</li><li>在后面的盒子模型中，我们会详细讲解边框相关的知识。</li></ol></blockquote><p><strong>2.</strong> <strong>表格独有属性（只有</strong> table <strong>标签才能使用）：</strong></p><table><thead><tr><th>CSS 属性名</th><th>功能</th><th>属性值</th></tr></thead><tbody><tr><td><code>table-layout</code></td><td>设置列宽度</td><td><code>auto</code> ：自动，列宽根据内容计算（默认值）。<br><code>fixed</code> ：固定列宽，平均分。</td></tr><tr><td><code>border-spacing </code></td><td>单元格间距</td><td><code>CSS</code> 中可用的长度值。<br>生效的前提：单元格边框不能合并。</td></tr><tr><td><code>border-collapse </code></td><td>合并单元格边框</td><td><code>collapse</code> ：合并<br><code>separate</code> ：不合并</td></tr><tr><td><code>empty-cells</code></td><td>隐藏没有内容的单元格</td><td><code>show</code> ：显示，默认<br><code>hide</code> ：隐藏<br>生效前提：单元格不能合并。</td></tr><tr><td><code>caption-side</code></td><td>设置表格标题位置</td><td><code>top</code> ：上面（默认值）<br><code>bottom</code> ：在表格下面</td></tr></tbody></table><blockquote><p>以上 <code>5</code> 个属性，只有表格才能使用，即： <code>&lt;table&gt;</code> 标签。</p></blockquote><h2 id="_7-css背景属性" tabindex="-1">7. CSS背景属性 <a class="header-anchor" href="#_7-css背景属性" aria-label="Permalink to &quot;7. CSS背景属性&quot;">​</a></h2><table><thead><tr><th><strong>css</strong> <strong>属性名</strong></th><th><strong>功能</strong></th><th><strong>属性值</strong></th></tr></thead><tbody><tr><td><code>background-color</code></td><td>设置背景颜色</td><td>符合 <code>CSS </code>中颜色规范的值。<br>默认背景颜色是 transparent 。</td></tr><tr><td><code>background-image</code></td><td>设置背景图片</td><td><code>url(图片的地址)</code></td></tr><tr><td><code>background-repeat</code></td><td>设置背景重复方式</td><td><code>repeat</code> ：重复，铺满整个元素，默认值。<br><code>repeat-x</code> ：只在水平方向重复。<br><code>repeat-y</code> ：只在垂直方向重复。<br><code>no-repeat</code> ：不重复。</td></tr><tr><td><code>background-position </code></td><td>设置背景图位置</td><td>**通过关键字设置位置：<br>**写两个值，用空格隔开<br>水平： <code>left</code> 、 <code>center</code> 、 <code>right</code><br>垂直: <code>top</code> 、 <code>center</code> 、 <code>bottom</code><br>如果只写一个值，另一个方向的值取 <code>center</code><br><br>**通过长度指定坐标位置：<br>**以元素左上角，为坐标原点，设置图片左上角的位置。<br>两个值，分别是 <code>x</code> 坐标和 <code>y</code> 坐标。<br>只写一个值，会被当做 <code>x</code> 坐标， <code>y</code> 坐标取<code>center</code></td></tr><tr><td><code>background </code></td><td>复合属性</td><td>没有数量和顺序要求</td></tr></tbody></table><h2 id="_8-css鼠标属性" tabindex="-1">8. CSS鼠标属性 <a class="header-anchor" href="#_8-css鼠标属性" aria-label="Permalink to &quot;8. CSS鼠标属性&quot;">​</a></h2><table><thead><tr><th><strong>CSS</strong> <strong>属性名</strong></th><th><strong>功能</strong></th><th><strong>属性值</strong></th></tr></thead><tbody><tr><td><code>cursor</code></td><td>设置鼠标光标的样式</td><td><code>pointer</code> ：小手<br><code>move</code> ：移动图标<br><code>text</code> ：文字选择器<br><code>crosshair</code> ：十字架<br><code>wait</code> ：等待<br><code>help</code> ：帮助</td></tr></tbody></table><blockquote><p>扩展：自定义鼠标图标</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 自定义鼠标光标 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cursor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: url(&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">./arrow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.png&quot;),pointer;</span></span></code></pre></div></blockquote>`,60),d=[n];function h(p,c,r,k,g,E){return a(),i("div",null,d)}const u=s(o,[["render",h]]);export{y as __pageData,u as default};
