import{_ as e,c as t,o as s,a3 as a}from"./chunks/framework.7ep0oyv4.js";const o="/assets/240417-qyiv2vZrHZ.D4BU4lZJ.png",b=JSON.parse('{"title":"八、布局","description":"","frontmatter":{},"headers":[],"relativePath":"css/8.md","filePath":"css/8.md"}'),d={name:"css/8.md"},i=a('<h1 id="八、布局" tabindex="-1">八、布局 <a class="header-anchor" href="#八、布局" aria-label="Permalink to &quot;八、布局&quot;">​</a></h1><h2 id="_1-版心" tabindex="-1">1. 版心 <a class="header-anchor" href="#_1-版心" aria-label="Permalink to &quot;1. 版心&quot;">​</a></h2><ul><li>在 <code>PC</code> 端网页中，一般都会有一个固定宽度且水平居中的盒子，来显示网页的主要内容，这是网页的<strong>版心</strong>。</li><li>版心的宽度一般是 <code>960 ~ 1200</code> 像素之间。</li><li>版心可以是一个，也可以是多个。 <img src="'+o+`" alt="image-20240417091820112" loading="lazy"></li></ul><h2 id="_2-常用布局名词" tabindex="-1">2. 常用布局名词 <a class="header-anchor" href="#_2-常用布局名词" aria-label="Permalink to &quot;2. 常用布局名词&quot;">​</a></h2><table><thead><tr><th><strong>位置</strong></th><th>名词</th></tr></thead><tbody><tr><td>顶部导航条</td><td><code>topbar</code></td></tr><tr><td>页头</td><td><code>header</code>、 <code>page-header</code></td></tr><tr><td>导航</td><td><code>nav</code> 、 <code>navigator</code> 、 <code>navbar</code></td></tr><tr><td>搜索框</td><td><code>search</code> 、 <code>search-box</code></td></tr><tr><td>横幅、广告、宣传图</td><td><code>banner</code></td></tr><tr><td>主要内容</td><td><code>content</code> 、 <code>main</code></td></tr><tr><td>侧边栏</td><td><code>aside</code> 、 <code>sidebar</code></td></tr><tr><td>页脚</td><td><code>footer</code> 、 <code>page-footer</code></td></tr></tbody></table><h2 id="_3-重置默认样式" tabindex="-1">3. 重置默认样式 <a class="header-anchor" href="#_3-重置默认样式" aria-label="Permalink to &quot;3. 重置默认样式&quot;">​</a></h2><p>很多元素都有默认样式，比如：</p><ol><li><code>p</code> 元素有默认的上下 <code>margin</code> 。</li><li><code>h1~h6</code> 标题也有上下 <code>margin</code> ，且字体加粗。</li><li><code>body</code> 元素有默认的 <code>8px</code> 外边距。</li><li>超链接有默认的文字颜色和下划线。</li><li><code>ul</code> 元素有默认的左 <code>pading</code> 。</li><li>.......</li></ol><blockquote><p>在早期，元素默认样式，能够让我们快速的绘制网页，但如今网页的设计越来越复杂，内容越来越</p><p>多，而且很精细，这些默认样式会给我们绘制页面带来麻烦；而且这些默认样式，在不同的浏览器</p><p>上呈现出来的效果也不一样，所以我们需要重置这些默认样式。</p></blockquote><p><strong>方案一：使用全局选择器</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>此种方法，在简单案例中可以用一下，但实际开发中不会使用，因为 <code>*</code> 选择的是所有元素，而并</p><p>不是所有的元素都有默认样式；而且我们重置时，有时候是需要做特定处理的，比如：想让 a 元</p><p>素的文字是灰色，其他元素文字是蓝色。</p></blockquote><p><strong>方案二：reset.css</strong></p><p>选择到具有默认样式的元素，清空其默认的样式。</p><blockquote><p>经过 <code>reset</code> 后的网页，好似“一张白纸”，开发人员可根据设计稿，精细的去添加具体的样式。</p></blockquote><p><strong>方案三：Normalize.css</strong></p><p><code>Normalize.css</code> 是一种最新方案，它在清除默认样式的基础上，保留了一些有价值的默认样式。</p><p>官网地址：<strong><a href="http://necolas.github.io/normalize.css/" target="_blank" rel="noreferrer">http://necolas.github.io/normalize.css/</a></strong></p><p>相对于 <code>reset.css</code> ， <code>Normalize.css</code> 有如下优点：</p><ol><li>保护了有价值的默认样式，而不是完全去掉它们。</li><li>为大部分HTML元素提供一般化的样式。</li><li>新增对 <code>HTML5</code> 元素的设置。</li><li>对并集选择器的使用比较谨慎，有效避免调试工具杂乱。</li></ol><blockquote><p>备注： <code>Normalize.css</code> 的重置，和 <code>reset.css</code> 相比，更加的温和，开发时可根据实际情况进行</p><p>选择。</p></blockquote>`,21),c=[i];function l(r,n,p,h,k,g){return s(),t("div",null,c)}const u=e(d,[["render",l]]);export{b as __pageData,u as default};
