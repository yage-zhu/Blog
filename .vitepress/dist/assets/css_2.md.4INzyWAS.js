import{_ as a,c as l,o as n,a3 as i,l as s}from"./chunks/framework.7ep0oyv4.js";const t="/assets/240415-YvGZc5M29o.DfHMihzJ.png",C=JSON.parse('{"title":"二、CSS选择器","description":"","frontmatter":{},"headers":[],"relativePath":"css/2.md","filePath":"css/2.md"}'),p={name:"css/2.md"},h=i(`<h1 id="二、css选择器" tabindex="-1">二、CSS选择器 <a class="header-anchor" href="#二、css选择器" aria-label="Permalink to &quot;二、CSS选择器&quot;">​</a></h1><h2 id="_1-css基本选择器" tabindex="-1">1. CSS基本选择器 <a class="header-anchor" href="#_1-css基本选择器" aria-label="Permalink to &quot;1. CSS基本选择器&quot;">​</a></h2><ol><li>通配选择器</li><li>元素选择器</li><li>类选择器</li><li>id 选择器</li></ol><h3 id="_1-1-通配选择器" tabindex="-1">1.1 通配选择器 <a class="header-anchor" href="#_1-1-通配选择器" aria-label="Permalink to &quot;1.1 通配选择器&quot;">​</a></h3><ul><li><p>作用：可以选中所有的 <code>HTML</code> 元素。</p></li><li><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    属性名: 属性值;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中所有元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">orange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>备注：目前来看通配选择器貌似有点鸡肋，但后面清除样式时，会对我们有很大帮助。</p></blockquote></li></ul><h3 id="_1-2-元素选择器" tabindex="-1">1.2 元素选择器 <a class="header-anchor" href="#_1-2-元素选择器" aria-label="Permalink to &quot;1.2 元素选择器&quot;">​</a></h3><ul><li><p>作用：为页面中 某种元素 统一设置样式。</p></li><li><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">标签名 {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	属性名: 属性值;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中所有h1元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">orange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中所有p元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>备注：元素选择器无法实现 <strong>差异化设置</strong>，例如上面的代码中，所有的 p 元素效果都一样。</p></li></ul><h3 id="_1-3-类选择器" tabindex="-1">1.3 类选择器 <a class="header-anchor" href="#_1-3-类选择器" aria-label="Permalink to &quot;1.3 类选择器&quot;">​</a></h3><ul><li><p>作用：根据元素的 class 值，来选中某些元素。</p><blockquote><p>class 翻译过来有：<strong>种类</strong>、<strong>类别</strong>的含义，所以 class 值，又称：类名。</p></blockquote></li><li><p>语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.类名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	属性名: 属性值;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中所有class值为speak的元素 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.speak</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中所有class值为answer的元素 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.answer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>注意点：</p><blockquote><ol><li><p>元素的 <code>class</code> 属性值不带 . ，但 <code>CSS</code> 的类选择器要带 . 。</p></li><li><p><code>class</code> 值，是我们自定义的，按照标准：不要使用纯数字、不要使用中文、尽量使用英文与数字的组合，若由多个单词组成，使用 - 做连接，例如： <code>left-menu</code> ，且命名要有意义，做到 “见名知意”。</p></li><li><p>一个元素不能写多个 <code>class</code> 属性，下面是 错误示例：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 该写法错误，元素的属性不能重复，后写的会失效 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;speak&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;big&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;你好啊&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p>一个元素的 <code>class</code> 属性，能写多个值，要用空格隔开，例如：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 该写法正确，class属性，能写多个值 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;speak big&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;你好啊&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ol></blockquote></li></ul><h3 id="_1-4-id选择器" tabindex="-1">1.4 ID选择器 <a class="header-anchor" href="#_1-4-id选择器" aria-label="Permalink to &quot;1.4 ID选择器&quot;">​</a></h3><ul><li><p>作用：根据元素的 <code>id</code> 属性值，来<strong>精准的</strong>选中<strong>某个</strong>元素语法：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#id值</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	属性名: 属性值;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中id值为earthy的那个元素 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#earthy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>注意：</p><ul><li>id 属性值：尽量由<strong>字母、数字、下划线</strong>(<code>_</code>)、<strong>短杠</strong>(<code>-</code>)组成，最好以字母开头、不要包含空格、区分大小写。</li><li>一个元素只能拥有一个 <code>id</code> 属性，多个元素的 <code>id</code> 属性值不能相同。</li><li>一个元素可以同时拥有 <code>id</code> 和 <code>class</code> 属性。</li></ul></li></ul><h3 id="_1-5-基本选择器总结" tabindex="-1">1.5 基本选择器总结 <a class="header-anchor" href="#_1-5-基本选择器总结" aria-label="Permalink to &quot;1.5 基本选择器总结&quot;">​</a></h3>`,12),e=s("table",{"color:red":""},[s("thead",null,[s("tr",null,[s("th",null,"基本选择器"),s("th",null,"特点"),s("th",null,"用法")])]),s("tbody",null,[s("tr",{"color:red":""},[s("td",null,"通配选择器"),s("td",null,"选中所有标签，一般用于清除样式。"),s("td",null,"*")]),s("tr",{"color:red":""},[s("td",null,"元素选择器"),s("td",null,"选中所有同种标签，但是不能差异化选择。"),s("td",null,"h1")]),s("tr",{"color:red":""},[s("td",null,"类选择器"),s("td",null,"选中所有特定类名（ class 值）的元素 —— 使用频率很高。"),s("td",null,".say")]),s("tr",null,[s("td",null,"ID 选择器"),s("td",null,"选中特定 id 值的那个元素（唯一的）。"),s("td",null,"#earthy")])])],-1),k=i(`<h2 id="_2-css复合选择器" tabindex="-1">2. CSS复合选择器 <a class="header-anchor" href="#_2-css复合选择器" aria-label="Permalink to &quot;2. CSS复合选择器&quot;">​</a></h2><p>CSS选择器整体分类两大类：</p><p>一、基本选择器： ①通配选择器</p><p>​ ②元素选择器</p><p>​ ③类选择器</p><p>​ ④ ID 选择器</p><p>二、复合选择器：</p><p>​ ①交集选择器</p><p>​ ②并集选择器</p><p>​ ③后代选择器</p><p>​ ④子元素选择器</p><p>​ .....</p><blockquote><ol><li>复合选择器建立在基本选择器之上，由多个基础选择器，通过不同的方式组合而成。</li><li>复合选择器可以在复杂结构中，快速而准确的选中元素。</li></ol></blockquote><h3 id="_2-1-交集选择器" tabindex="-1">2.1 交集选择器 <a class="header-anchor" href="#_2-1-交集选择器" aria-label="Permalink to &quot;2.1 交集选择器&quot;">​</a></h3><ul><li><p>作用：选中 <strong>同时符合</strong> 多个条件的元素。</p><blockquote><p>交集有<strong>并且</strong>的含义（通俗理解：<strong>即......又.....</strong> 的意思），例如：年轻 <strong>且</strong> 长得帅。</p></blockquote></li><li><p>语法：选择器1选择器2选择器3...选择器n {}</p></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中：类名为beauty的p元素，为此种写法用的非常多！！！！ */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.beauty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中：类名包含rich和beauty的元素 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.rich.beauty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>注意：</p><ol><li>有标签名，标签名必须写在前面。</li><li><code>id</code> 选择器、通配选择器，理论上可以作为交集的条件，但实际应用中几乎不用 —— 因为没有意义。</li><li>交集选择器中<strong>不可能</strong>出现<strong>两个元素选择器</strong>，因为一个元素，不可能即是 <code>p</code> 元素又是 <code>span</code> 元素。</li><li>用的最多的交集选择器是：元素选择器配合类名选择器，例如： <code>p.beauty</code> 。</li></ol></li></ul><h3 id="_2-2-并集选择器" tabindex="-1">2.2 并集选择器 <a class="header-anchor" href="#_2-2-并集选择器" aria-label="Permalink to &quot;2.2 并集选择器&quot;">​</a></h3><ul><li><p>作用：选中多个选择器对应的元素，又称：<strong>分组选择器</strong>。</p><blockquote><p>所谓并集就是<strong>或者</strong>的含义（通俗理解：<strong>要么......要么......</strong> 的意思），例如：给我转10万块钱</p><p>或者我报警。</p></blockquote></li><li><p>语法：选择器1, 选择器2, 选择器3, ... 选择器n {}</p><blockquote><p>多个选择器通过 , 连接，此处 , 的含义就是：<strong>或</strong>。</p></blockquote></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中id为peiqi，或类名为rich，或类名为beauty的元素 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#peiqi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.rich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.beauty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skyblue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>注意：</p><ol><li>并集选择器，我们一般竖着写。</li><li>任何形式的选择器，都可以作为并集选择器的一部分 。</li><li>并集选择器，通常用于集体声明，可以缩小样式表体积。</li></ol></li></ul><h3 id="_2-3-html元素间的关系" tabindex="-1">2.3 HTML元素间的关系 <a class="header-anchor" href="#_2-3-html元素间的关系" aria-label="Permalink to &quot;2.3 HTML元素间的关系&quot;">​</a></h3><p>分为：①父元素、②子元素、③祖先元素、④后代元素、⑤兄弟元素。</p><ol><li>父元素：<strong>直接</strong>包裹某个元素的元素，就是该元素的父元素。</li><li>子元素：被父元素<strong>直接</strong>包含的元素（简记：儿子元素）。</li><li>祖先元素：父亲的父亲......，一直往外找，都是祖先。</li><li>后代元素：儿子的儿子......，一直往里找，都是后代。</li><li>兄弟元素：具有相同父元素的元素，互为兄弟元素。</li></ol><h3 id="_2-4-后代选择器" tabindex="-1">2.4 后代选择器 <a class="header-anchor" href="#_2-4-后代选择器" aria-label="Permalink to &quot;2.4 后代选择器&quot;">​</a></h3><ul><li><p>作用：选中指定元素中，符合要求的后代元素。</p></li><li><p>语法：选择器1 选择器2 选择器3 ...... 选择器n {} （先写祖先，再写后代）</p><blockquote><p>选择器之间，用空格隔开，空格可以理解为：&quot; xxx 中的&quot;，其实就是后代的意思。</p><p>选择器 1234....n ，可以是我们之前学的任何一种选择器。</p></blockquote></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中ul中的所有li */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中ul中所有li中的a */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> li</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">orange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中类名为subject元素中的所有li */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.subject</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中类名为subject元素中的所有类名为front-end的li */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.subject</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> li</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.front-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>注意：</p><ol><li>后代选择器，最终选择的是后代，不选中祖先。</li><li>儿子、孙子、重孙子，都算是后代。</li><li>结构一定要符合之前讲的 HTML 嵌套要求，例如：不能 p 中写 h1 ~ h6 。</li></ol></li></ul><h3 id="_2-5-子代选择器" tabindex="-1">2.5 子代选择器 <a class="header-anchor" href="#_2-5-子代选择器" aria-label="Permalink to &quot;2.5 子代选择器&quot;">​</a></h3><ul><li><p>作用：选中指定元素中，符合要求的<strong>子</strong>元素（<strong>儿子元素</strong>）。（先写父，再写子）</p><blockquote><p>子代选择器又称：子元素选择器、子选择器</p></blockquote></li><li><p>语法：选择器1 &gt; 选择器2 &gt; 选择器3 &gt; ...... 选择器n {}</p><blockquote><p>选择器之间，用 &gt; 隔开， &gt; 可以理解为：&quot; xxx 的子代&quot;，其实就是儿子的意思。</p><p>选择器 1234....n ，可以是我们之前学的任何一种选择器。</p></blockquote></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* div中的子代a元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 类名为persons的元素中的子代a元素 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.persons</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>注意：</p><ol><li>子代选择器，最终选择的是子代，不是父级。</li><li>子、孙子、重孙子、重重孙子 ...... 统称后代！，<strong>子</strong>就是指<strong>儿子</strong>。</li></ol></li></ul><h3 id="_2-6-兄弟选择器" tabindex="-1">2.6 兄弟选择器 <a class="header-anchor" href="#_2-6-兄弟选择器" aria-label="Permalink to &quot;2.6 兄弟选择器&quot;">​</a></h3><ul><li><p>相邻兄弟选择器</p><ul><li><p>作用：选中指定元素后，符合条件的<strong>相邻兄弟</strong>元素。</p><blockquote><p>所谓相邻，就是<strong>紧挨着</strong>他的下一个，简记：睡在我下铺的兄弟。</p></blockquote></li><li><p>语法： <code>选择器1+选择器2 {}</code> 。</p></li><li><p>示例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中div后相邻的兄弟p元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul></li><li><p>通用兄弟选择器：</p><ul><li><p>作用：选中指定元素后，符合条件的<strong>所有兄弟</strong>元素。（简记：睡在我下铺的所有兄弟）</p></li><li><p>语法： <code>选择器1~选择器2 {}</code> 。</p></li><li><p>实例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中div后的所有的兄弟p元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul></li><li><p>注意：两种兄弟选择器，选择的是<strong>下面</strong>的兄弟。</p></li></ul><h3 id="_2-7-属性选择器" tabindex="-1">2.7 属性选择器 <a class="header-anchor" href="#_2-7-属性选择器" aria-label="Permalink to &quot;2.7 属性选择器&quot;">​</a></h3><ul><li><p>作用：选中属性值符合一定要求的元素。</p></li><li><p>语法：</p><ol><li><code>[属性名]</code> 选中<strong>具有</strong>某个属性的元素。</li><li><code>[属性名=&quot;值&quot;]</code> 选中包含某个属性，且属性值<strong>等于</strong>指定值的元素。</li><li><code>[属性名^=&quot;值&quot;]</code> 选中包含某个属性，且属性值以指定的值<strong>开头</strong>的元。</li><li><code>[属性名$=&quot;值&quot;]</code> 选中包含某个属性，且属性值以指定的值<strong>结尾</strong>的。</li><li><code>[属性名*=“值”]</code> 选择包含某个属性，属性值<strong>包含</strong>指定值的元素。</li></ol></li><li><p>举例：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中具有title属性的元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中title属性值为atguigu的元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;atguigu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中title属性值以a开头的元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中title属性值以u结尾的元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;u&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 选中title属性值包含g的元素 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;}</span></span></code></pre></div></li></ul><h3 id="_2-8-伪类选择器" tabindex="-1">2.8 伪类选择器 <a class="header-anchor" href="#_2-8-伪类选择器" aria-label="Permalink to &quot;2.8 伪类选择器&quot;">​</a></h3><ul><li><p>作用：选中特殊状态的元素。</p><blockquote><p>如何理解“伪” ? — 虚假的，不是真的。</p><p>如何理解“伪类”？ — 像类( class )，但不是类，是元素的一种特殊状态。</p></blockquote></li><li><p>常用的伪类选择器：</p></li></ul><p><strong>一、动态伪类：</strong></p><ol><li><p><code>:link</code> 超链接 <strong>未被访问</strong> 的状态。</p></li><li><p><code>:visited</code> 超链接 <strong>访问过</strong> 的状态。</p></li><li><p><code>:hover</code> 鼠标 <strong>悬停</strong> 在元素上的状态。</p></li><li><p><code>:active</code> 元素 <strong>激活</strong> 的状态。</p><blockquote><p>什么是激活？—— 按下鼠标不松开。</p><p>注意点：遵循 LVHA 的顺序，即： link 、 visited 、 hover 、 active 。</p></blockquote></li><li><p><code>:focus</code> 获取焦点的元素。</p><blockquote><p>表单类元素才能使用 <code>:focus</code> 伪类。</p><p>当用户：点击元素、触摸元素、或通过键盘的 “ <code>tab</code> ” 键等方式，选择元素时，就是获</p><p>得焦点。</p></blockquote></li></ol><p><strong>二、结构伪类</strong></p><ul><li>常用的： <ol><li><code>:first-child</code> 所有兄弟元素中的 <strong>第一个</strong>。</li><li><code>:last-child</code> 所有兄弟元素中的 <strong>最后一个</strong>。</li><li><code>:nth-child(n)</code> 所有兄弟元素中的 <strong>第</strong> <strong>n</strong> <strong>个</strong>。</li><li><code>:first-of-type</code> 所有 <strong>同类型</strong> 兄弟元素中的 <strong>第一个</strong>。</li><li><code>:last-of-type</code> 所有 <strong>同类型</strong> 兄弟元素中的 <strong>最后一个</strong>。</li><li><code>:nth-of-type(n)</code> 所有 <strong>同类型</strong> 兄弟元素中的 <strong>第n个</strong> 。</li></ol></li></ul><p>关于 n 的值：</p><blockquote><ol><li><code>0</code> 或 <code>不写</code> ：什么都选不中 —— 几乎不用。</li><li><code>n</code> ：选中所有子元素 —— 几乎不用。</li><li><code>1~正无穷的整数</code> ：选中对应序号的子元素。</li><li><code>2n</code> 或 <code>even</code> ：选中序号为偶数的子元素。</li><li><code>2n+1</code> 或 <code>odd</code> ：选中序号为奇数的子元素。</li><li><code>-n+3</code> ：选中的是前 3 个。</li></ol></blockquote><ul><li>了解即可： <ol><li><code>:nth-last-child(n)</code> 所有兄弟元素中的 <strong>倒数第 n 个</strong>。</li><li><code>:nth-last-of-type(n)</code> 所有 <strong>同类型</strong> 兄弟元素中的 <strong>倒数第n个</strong> 。</li><li><code>:only-child</code> 选择没有兄弟的元素（独生子女）。</li><li><code>:only-of-type</code> 选择没有 <strong>同类型</strong> 兄弟的元素</li><li><code>:root</code> 根元素</li><li><code>:empty</code> 内容为空元素（空格也算内容）。</li></ol></li></ul><p><strong>三、否定伪类：</strong></p><p>​ <code>:not(选择器)</code> 排除满足括号中条件的元素。</p><p><strong>四、UI伪类：</strong></p><ol><li><code>:checked</code> 被选中的复选框或单选按钮。</li><li><code>:enable</code> 可用的表单元素（没有 <code>disabled</code> 属性）。</li><li><code>:disabled</code> 不可用的表单元素（有 <code>disabled</code> 属性）。</li></ol><p><strong>五、目标伪类（了解）</strong></p><p>​ <code>:target</code> 选中锚点指向的元素。</p><p><strong>六、语言伪类（了解）</strong></p><p>​ <code>:lang()</code> 根据指定的语言选择元素（本质是看 lang 属性的值）。</p><h3 id="_2-9-伪元素选择器" tabindex="-1">2.9 伪元素选择器 <a class="header-anchor" href="#_2-9-伪元素选择器" aria-label="Permalink to &quot;2.9 伪元素选择器&quot;">​</a></h3><ul><li>作用：选中元素中的一些特殊位置。</li><li>常用伪元素： <ul><li><code>::first-letter</code> 选中元素中的 <strong>第一个文字</strong>。</li><li><code>::first-line</code> 选中元素中的 <strong>第一行文字</strong>。</li><li><code>::selection</code> 选中 <strong>被鼠标选中的</strong> 内容。</li><li><code>::placeholder</code> 选中输入框的 <strong>提示文字</strong>。</li><li><code>::before</code> 在元素 <strong>最开始</strong> 的位置，创建一个子元素（必须用 content 属性指定内容）。</li><li><code>::after</code> 在元素 <strong>最后</strong> 的位置，创建一个子元素（必须用 content 属性指定内容）。</li></ul></li></ul><h3 id="_3-选择器的优先级-权重" tabindex="-1">3. 选择器的优先级（权重） <a class="header-anchor" href="#_3-选择器的优先级-权重" aria-label="Permalink to &quot;3. 选择器的优先级（权重）&quot;">​</a></h3><p>通过<strong>不同的选择器</strong>，选中<strong>相同的元素</strong> ，并且为<strong>相同的样式名</strong>设置<strong>不同的值</strong>时，就发生了样式的冲突。到底应用哪个样式，此时就需要看<strong>优先级</strong>了。</p><ul><li><p>简单描述：</p><blockquote><p><strong>行内样式</strong> &gt; <strong>ID选择器</strong> &gt; <strong>类选择器</strong> &gt; <strong>元素选择器</strong> &gt; <strong>通配选择器</strong>。</p></blockquote></li><li><p>详细描述：</p><ol><li><p>计算方式：每个选择器，都可计算出一组权重，格式为： (a,b,c)</p><blockquote><ul><li>a : <strong>ID</strong> 选择器的个数。</li><li>b : <strong>类、伪类、属性</strong> 选择器的个数。</li><li>c : <strong>元素、伪元素</strong> 选择器的个数。</li></ul><p>例如：</p><table><thead><tr><th>选择器</th><th>权重</th></tr></thead><tbody><tr><td>ul&gt;li</td><td>(0,0,2)</td></tr><tr><td>div ul&gt;li p a span</td><td>(0,0,6)</td></tr><tr><td>#atguigu .slogan</td><td>(1,1,0)</td></tr><tr><td>#atguigu .slogan a</td><td>(1,1,1)</td></tr><tr><td>#atguigu .slogan a:hover</td><td>(1,2,1)</td></tr></tbody></table></blockquote></li><li><p>比较规则：按照<strong>从左到右</strong>的顺序，依次比较大小，当前位胜出后，后面的不再对比，例如</p><blockquote><ul><li>(1,0,0) &gt; (0,2,2)</li><li>(1,1,0) &gt; (1,0,3)</li><li>(1,1,3) &gt; (1,1,2)</li></ul></blockquote></li><li><p>特殊规则：</p><ol><li><strong>行内样式</strong> 权重大于 <strong>所有选择器</strong></li><li><code>!important</code> 的权重，大于<strong>行内样式</strong>，大于<strong>所有选择器</strong>，<strong>权重最高！</strong></li></ol></li><li><p>图示： <img src="`+t+'" alt="image-20240415104918079" loading="lazy"></p></li></ol></li></ul>',50),o=[h,e,k];function d(r,g,c,E,y,u){return n(),l("div",null,o)}const b=a(p,[["render",d]]);export{C as __pageData,b as default};
