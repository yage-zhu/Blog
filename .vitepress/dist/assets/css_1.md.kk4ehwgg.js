import{_ as s}from"./chunks/240415-hZqjeKJNZz.CBYiqk9D.js";import{_ as i,c as a,o as t,a3 as l}from"./chunks/framework.7ep0oyv4.js";const e="/assets/240415-EmwmXLYEpe.DqvpcCWY.png",C=JSON.parse('{"title":"一、CSS基础","description":"","frontmatter":{},"headers":[],"relativePath":"css/1.md","filePath":"css/1.md"}'),n={name:"css/1.md"},h=l('<h1 id="一、css基础" tabindex="-1">一、CSS基础 <a class="header-anchor" href="#一、css基础" aria-label="Permalink to &quot;一、CSS基础&quot;">​</a></h1><h2 id="_1-css简介" tabindex="-1">1.CSS简介 <a class="header-anchor" href="#_1-css简介" aria-label="Permalink to &quot;1.CSS简介&quot;">​</a></h2><p><img src="'+s+`" alt="image-20240415100110774" loading="lazy"></p><ul><li><code>CSS</code> 的全称为：层叠样式表 ( Cascading Style Sheets ) 。</li><li><code>CSS</code> 也是一种标记语言，用于给 HTML 结构设置样式，例如：文字大小、颜色、元素宽高等等。</li></ul><blockquote><p>简单理解： <code>CSS</code> 可以美化 <code>HTML</code> , 让 <code>HTML</code> 更漂亮。</p><p>核心思想： <code>HTML</code> 搭建结构， <code>CSS</code> 添加样式，实现了：结构与样式的分离。</p></blockquote><h2 id="_2-css的编写位置" tabindex="-1">2. CSS的编写位置 <a class="header-anchor" href="#_2-css的编写位置" aria-label="Permalink to &quot;2. CSS的编写位置&quot;">​</a></h2><h3 id="_2-1-行内样式" tabindex="-1">2.1 行内样式 <a class="header-anchor" href="#_2-1-行内样式" aria-label="Permalink to &quot;2.1 行内样式&quot;">​</a></h3><ul><li><p>写在标签的 <code>style</code> 属性中，（又称：内联样式）。</p></li><li><p>语法</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color:red;font-size:60px;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;欢迎来到尚硅谷学习&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p>注意点：</p><blockquote><ol><li>style 属性的值不能随便写，写要符合 <code>CSS</code> 语法规范，是 <code>名:值</code>; 的形式。</li><li>行内样式表，只能控制当前标签的样式，对其他标签无效。</li></ol></blockquote></li><li><p>存在的问题：</p><blockquote><p>书写繁琐、样式不能复用、并且没有体现出：<strong>结构与样式分离</strong> 的思想，不推荐大量使用，只</p><p>有对当前元素添加简单样式时，才偶尔使用。</p></blockquote></li></ul><h3 id="_2-2-内部样式" tabindex="-1">2.2 内部样式 <a class="header-anchor" href="#_2-2-内部样式" aria-label="Permalink to &quot;2.2 内部样式&quot;">​</a></h3><ul><li><p>写在 <code>html</code> 页面内部，将所有的 <code>CSS</code> 代码提取出来，单独放在 <code>&lt;style&gt;</code> 标签中。</p></li><li><p>语法：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p>注意点：</p><blockquote><ol><li><code>&lt;style&gt;</code> 标签理论上可以放在 <code>HTML</code> 文档的任何地方，但一般都放在 <code>&lt;head&gt;</code> 标签</li></ol><p>中。</p><ol start="2"><li>此种写法：样式可以复用、代码结构清晰。</li></ol></blockquote></li><li><p>存在的问题：</p><blockquote><ol><li>并没有实现：结构与样式 <strong>完全分离</strong>。</li><li>多个 <code>HTML</code> 页面无法复用样式。</li></ol></blockquote></li></ul><h3 id="_2-3-外部样式" tabindex="-1">2.3 外部样式 <a class="header-anchor" href="#_2-3-外部样式" aria-label="Permalink to &quot;2.3 外部样式&quot;">​</a></h3><ul><li><p>写在单独的 <code>.css</code> 文件中，随后在 <code>HTML</code> 文件中引入使用。</p></li><li><p>语法：</p><ol><li><p>新建一个扩展名为 .css 的样式文件，把所有 CSS 代码都放入此文件中。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>在 <code>HTML</code> 文件中引入 <code>.css</code> 文件。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rel=&quot;stylesheet&quot; href=&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">./xxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.css&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li></ol></li><li><p>注意点：</p><blockquote><ol><li><code>&lt;link&gt;</code> 标签要写在 <code>&lt;head&gt;</code> 标签中。</li><li><code>&lt;link&gt;</code> 标签属性说明： <code>href</code> ：引入的文档来自于哪里。 <code>rel</code> ：( <code>relation</code> ：关系）说明引入的文档与当前文档之间的关系。</li><li>外部样式的优势：样式可以复用、结构清晰、可触发浏览器的缓存机制，提高访问速 度 ，实现了结构与样式的完全分离。</li><li>实际开发中，几乎都使用外部样式，这是 最推荐的使用方式！</li></ol></blockquote></li></ul><h2 id="_3-样式表的优先级" tabindex="-1">3. 样式表的优先级 <a class="header-anchor" href="#_3-样式表的优先级" aria-label="Permalink to &quot;3. 样式表的优先级&quot;">​</a></h2><ul><li><p>优先级规则：<strong>行内样式</strong> &gt; <strong>内部样式</strong> = <strong>外部样式</strong></p><blockquote><ol><li>内部样式、外部样式，这二者的优先级相同，且：后面的 会覆盖 前面的（简记：“后来</li></ol><p>者居上”）。</p><ol start="2"><li>同一个样式表中，优先级也和编写顺序有关，且：后面的 会覆盖 前面的（简记：“后来</li></ol><p>者居上”）。</p></blockquote></li></ul><table><thead><tr><th>分类</th><th>优点</th><th>缺点</th><th>使用频率</th><th><strong>作用范围</strong></th></tr></thead><tbody><tr><td>行内样式</td><td>优先级最高</td><td>1. 结构与样式未分离<br>2. 代码结构混乱<br>3. 样式不能复用</td><td>很低</td><td>当前标签</td></tr><tr><td>内部样式</td><td>1. 样式可复用<br>2. 代码结构清晰</td><td>1. 结构与样式未分离<br>2. 代码结构混乱<br>3. 样式不能复用</td><td>一般</td><td>当前页面</td></tr><tr><td>外部样式</td><td>1. 样式可多页面复用<br>2. 代码结构清晰<br>3. 可触发浏览器的缓存机制<br>4. 结构与样式彻底分离</td><td>需要引入才能使用</td><td>最高</td><td>多个页面</td></tr></tbody></table><h2 id="_4-css语法规范" tabindex="-1">4. CSS语法规范 <a class="header-anchor" href="#_4-css语法规范" aria-label="Permalink to &quot;4. CSS语法规范&quot;">​</a></h2><p><code>CSS</code> 语法规范由两部分构成：</p><ul><li><p><strong>选择器</strong>：找到要添加样式的元素。</p></li><li><p><strong>声明块</strong>：设置具体的样式（<strong>声明块</strong>是由一个或多个<strong>声明</strong>组成的），声明的格式为： 属性名: 属性值;</p></li></ul><blockquote><p>备注1：最后一个声明后的分号理论上能省略，但最好还是写上。</p><p>备注2：选择器与声明块之间，属性名与属性值之间，均有一个空格，理论上能省略，但最好还是写上。</p></blockquote><p><img src="`+e+`" alt="image-20240415100146121" loading="lazy"></p><ul><li>注释的写法：<div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 给h1元素添加样式 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 设置文字颜色为红色 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 设置文字大小为40px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h2 id="_5-css代码风格" tabindex="-1">5. CSS代码风格 <a class="header-anchor" href="#_5-css代码风格" aria-label="Permalink to &quot;5. CSS代码风格&quot;">​</a></h2><ul><li><p><strong>展开风格</strong> —— 开发时推荐，便于维护和调试。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>紧凑风格</strong> —— 项目上线时推荐，可减小文件体积。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;}</span></span></code></pre></div></li><li><p>备注：</p><blockquote><p>项目上线时，我们会通过工具将【展开风格】的代码，变成【紧凑风格】，这样可以减小文</p><p>件体积，节约网络流量，同时也能让用户打开网页时速度更快。</p></blockquote></li></ul>`,23),p=[h];function k(o,d,r,c,E,g){return t(),a("div",null,p)}const b=i(n,[["render",k]]);export{C as __pageData,b as default};
