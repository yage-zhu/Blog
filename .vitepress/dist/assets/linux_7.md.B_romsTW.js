import{_ as t,c as d,o as a,a3 as e}from"./chunks/framework.7ep0oyv4.js";const I=JSON.parse('{"title":"RAID和LVM","description":"","frontmatter":{},"headers":[],"relativePath":"linux/7.md","filePath":"linux/7.md"}'),r={name:"linux/7.md"},n=e('<h1 id="raid和lvm" tabindex="-1">RAID和LVM <a class="header-anchor" href="#raid和lvm" aria-label="Permalink to &quot;RAID和LVM&quot;">​</a></h1><h2 id="raid磁盘冗余阵列" tabindex="-1">RAID磁盘冗余阵列 <a class="header-anchor" href="#raid磁盘冗余阵列" aria-label="Permalink to &quot;RAID磁盘冗余阵列&quot;">​</a></h2><p>RAID技术通过把多个硬盘设备组合成一个容量更大、安全性更好的磁盘阵列，并把数据切割成多个区段后分别存放在各个不同的物理硬盘设备上，然后利用分散读写技术来提升磁盘阵列整体的性能，同时把多个重要数据的副本同步到不同的物理硬盘设备上，从而起到了非常好的<strong>数据冗余备份</strong>效果。</p><p>出于成本和技术方面的考虑，需要针对不同的需求在数据可靠性及读写性能上做出权衡，制定出满足各自需求的不同方案。目前已有的RAID磁盘阵列的方案至少有十几种，RAID 0、RAID 1、RAID 5与RAID 10这4种是最常见的方案。</p><table><thead><tr><th>RAID级别</th><th>最少硬盘</th><th>可用容量</th><th>读写性能</th><th>安全性</th><th>特点</th></tr></thead><tbody><tr><td>0</td><td>2</td><td>n</td><td>n</td><td>低</td><td>追求最大容量和速度，任何一块盘损坏，数据全部异常。</td></tr><tr><td>1</td><td>2</td><td>n/2</td><td>n</td><td>高</td><td>追求最大安全性，只要阵列组中有一块硬盘可用，数据不受影响。</td></tr><tr><td>5</td><td>3</td><td>n-1</td><td>n-1</td><td>中</td><td>在控制成本的前提下，追求硬盘的最大容量、速度及安全性，允许有一块硬盘异常，数据不受影响。</td></tr><tr><td>10</td><td>4</td><td>n/2</td><td>n/2</td><td>高</td><td>综合RAID1和RAID0的优点，追求硬盘的速度和安全性，允许有一半硬盘异常（不可同组），数据不受影响</td></tr></tbody></table>',5),o=[n];function h(i,_,s,l,c,A){return a(),d("div",null,o)}const p=t(r,[["render",h]]);export{I as __pageData,p as default};
